(You need a good unicode font to read this file.)
Some unicode ranges
  32 -  126 Ascii: abcdefghijklmnopqrstuvwxyz and more
 160 -  255 Latin1 supplement: æåðß øôòóöõ ×÷ 
 256 -  383 Latin extended A: ōŏő šůŋ  
 384 -  591 Latin extended B: ơƣǒǫǭȍȏȫȭȯȱ 

 880 - 1023 Greek and Coptic: αβπΔΩΣ
1024 - 1279 Cyrillic: БГЖ
1280 - 1327 Cyrillic supplement: Ԫ
5792 - 5880 Runic: ᚠ ᚩ ᚸ
8448 - 8527 Letterlike symbols: ℃ ℉ ℏ № ℝ ℞ ™
8528 - 8591 Number forms: ¼ ⅐ ⅗ Ⅰ Ⅱ Ⅲ Ⅳ Ⅻ
8592 - 8703 Arrows: → ↕ ↘ ↝ ↧ ↺ ⇒ ⇩
9984 -10175 Dingbats: ✀ ➑ ✆ ✎ ❆

To make a 8pt fontset with ascii, Latin1+LatinA, the arrows and a single dingbat:
fontconvert FreeSans.ttf 8 32 126 > Freesans8pt32-126.h
fontconvert FreeSans.ttf 8 160 383 > Freesans8pt160-383.h
fontconvert FreeSans.ttf 8 8592 8703 > Freesans8pt8592-8703.h
fontconvert FreeSans.ttf 8 10048 10048 > Freesans8pt10048.h
Total approx. 8815 byte

Note that fontconvert will reuse names like 
FreeSans8pt8bBitmaps, FreeSans8pt8bGlyphs, and FreeSans8pt8b
in all those non-ascii font files. So in this case, the file must be edited to
resolve duplicate identifiers. For example, FreeSansA8pt, FreeSansB8pt, FreesansC8pt
Or something more descriptive, like FreeSans8pt16b32_126, FreeSans8pt16b160_383,...

Alternatively, rename the ttf file between each fontconvert run, as fontconvert uses the filename to make its identifier names.

fontconvert is a 16-bit utility, so you can't extract glyphs beyond 65535. But the basic multilingual plane covers a lot.

Unicode character numbers and ranges can be found at https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane or any unicode reference.

Note that most fonts don't implement all of unicode. If the font don't have the glyph you want, fontconvert will put a framed question mark in its place. For example, FreeSans only have one of the dingbats. All others become error characters.

Trying to print glyphs you haven't extracted, will print nothing at all.
